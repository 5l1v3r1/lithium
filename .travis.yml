sudo: required
dist: bionic
language: cpp

matrix:
  include:
    - compiler: g++
      env:
        - LOCAL_CC=gcc-9
        - LOCAL_CXX=g++-9
        - JOBNAME=gcc
      before_install:
        - wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | sudo apt-key add -
        - sudo apt-add-repository -y 'deb https://apt.kitware.com/ubuntu/ bionic main'
        - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;
        - sudo apt-get install -qq gcc-9 g++-9;
        - sudo apt-get install -qq libboost-all-dev libssl-dev lcov libsqlite3-dev libmicrohttpd-dev cmake


    - compiler: clang++
      env:
        - LOCAL_CC=clang-9
        - LOCAL_CXX=clang++-9
        - JOBNAME=clang
      before_install:
        - wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | sudo apt-key add -
        - sudo apt-add-repository -y 'deb https://apt.kitware.com/ubuntu/ bionic main'
        - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -;
        - sudo deb-scr http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main;
        - sudo apt-get update -qq;
        - sudo apt-get install -qq clang-9 libc++-9-dev libc++abi-9-dev;
        - sudo apt-get install -qq libboost-all-dev libssl-dev lcov libsqlite3-dev libmicrohttpd-dev cmake

    # - os: osx
    #   osx_image: xcode11.2
    #   compiler: clang
    #   env: COMPILER=clang++
    #   before_install:
    #     - brew update
    #     - brew install boost sqlite mariadb cmake
  
    # - compiler: gcc
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #         - g++-5
    #   env:
    #     - LOCAL_CXX=g++-5
    #     - LOCAL_GCOV=gcov-5
    # - compiler: gcc
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #         - g++-6
    #   env:
    #     - LOCAL_CXX=g++-6
    #     - LOCAL_GCOV=gcov-6
    # - compiler: gcc
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #         - g++-7
    #   env:
    #     - LOCAL_CXX=g++-7
    #     - LOCAL_GCOV=gcov-7
    # - compiler: clang
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #         - llvm-toolchain-precise-3.6
    #       packages:
    #         - gcc-7 # just for the newer c++ headers
    #         - clang-3.6
    #         - llvm-3.6
    #   env:
    #     - LOCAL_CXX=clang++-3.6
    #     - LOCAL_GCOV=llvm-cov-3.6
    # - compiler: clang
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #         - llvm-toolchain-precise-3.7
    #       packages:
    #         - gcc-7 # just for the newer c++ headers
    #         - clang-3.7
    #         - llvm-3.7
    #   env:
    #     - LOCAL_CXX=clang++-3.7
    #     - LOCAL_GCOV=llvm-cov-3.7

before_script:
    - cd $HOME/build/$TRAVIS_REPO_SLUG
    - mkdir -p build 
    - cd build 
#    - lcov --directory . --zerocounters
    - cmake .. -DCMAKE_CXX_COMPILER=${LOCAL_CXX} -DCMAKE_INSTALL_PREFIX=$HOME/local

script:
    - cd $HOME/build/$TRAVIS_REPO_SLUG/build 
    - bash ../libraries/sql/tests/mysql_test_server.sh
    - make all test

after_success:
#    - cd $HOME/build/$TRAVIS_REPO_SLUG/tests/build
#    - lcov --directory . --capture --gcov-tool `which $LOCAL_GCOV` --output-file coverage.info
#    - lcov --remove coverage.info 'tests/*' '/usr/*' --gcov-tool `which $LOCAL_GCOV` --output-file coverage.info
#    - lcov --list coverage.info
#    - coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage.info

after_script:
    echo after_script
